%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c75450655d80cac4ea4b0c2e3c0e01f3, type: 3}
  m_Name: Wutzorn
  m_EditorClassIdentifier: 
  displayName: Wutzorn
  maxHealth: 80
  baseAttackDamage: 0
  sprite: {fileID: 21300000, guid: 93a7499cb5229d0489c64e0b4e341ff5, type: 3}
  abilities:
  - rid: 8790164513324270165
  enemyPattern:
    behaviors:
    - intent: 1
      enemyTargetMethod: 0
      targetsKey: target
      displayValue: 3
      effectSteps:
      - rid: 3931529445166809429
      - rid: 4053950218419044423
      - rid: 3931529445166809326
      - rid: 5602893111447519606
      - rid: 5602893111447519608
      - rid: 5602893111447519609
      - rid: 5602893111447519607
      - rid: 5280922829633617990
    behaviorType: 0
    nextBehaviorIndex: 0
  belowHalfHPEnemyPattern:
    behaviors: []
    behaviorType: 0
    nextBehaviorIndex: 0
  initialStatuses: []
  tooltip:
    empty: 0
    lines:
    - title: Wutzorn's Rage
      description: Whenever Wutzorn takes damage, it gains 1 temporary strength for
        its next attack
      relatedBehaviorIndex: 0
  references:
    version: 2
    RefIds:
    - rid: 3931529445166809326
      type: {class: CombatEffectStep, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: CombatEffectStep
        inputKey: target
        combatEffect: 0
        scale: 3
        getScaleFromKey: 0
        inputScaleKey: 
        multiplicity: 1
        getMultiplicityFromKey: 0
        inputMultiplicityKey: 
    - rid: 3931529445166809429
      type: {class: GetTargets, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: GetTargets
        useInputToLimitOptions: 0
        inputKey: 
        outputKey: self
        validTargets: 
        number: 1
        specialTargetRule: 3
        cantCancelTargetting: 0
    - rid: 4053950218419044423
      type: {class: FXEffectStep, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: FXEffectStep
        waitForEffect: 1
        fXExperiencePrefab: {fileID: 7374988516867921400, guid: 080ebf6cafefa59438cf877ee502d109, type: 3}
        rootLocationGameObjectKey: 
        positionMappingList:
        - fromWorkflow: target
          toFxExperience: companionLocation
        - fromWorkflow: self
          toFxExperience: enemyLocation
        gameobjectMappingList:
        - fromWorkflow: self
          toFxExperience: enemy
    - rid: 5280922829633617990
      type: {class: InstantiatePrefab, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: InstantiatePrefab
        inputKey: self
        prefabToInstantiate: {fileID: 3850217184923880746, guid: 4bed509d0589dae4d922d8eeb61a6292, type: 3}
        scale: 1
    - rid: 5602893111447519606
      type: {class: CountStatusEffectsStep, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: CountStatusEffectStep
        inputKey: self
        statusEffect: 0
        onlyCountStatusOnce: 0
        outputKey: numStrength
    - rid: 5602893111447519607
      type: {class: ApplyStatus, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: ApplyStatus
        inputKey: self
        statusEffect: 0
        scale: 1
        getScaleFromKey: 0
        inputScaleKey: 
        multiplyByNumAuraStacks: 0
    - rid: 5602893111447519608
      type: {class: BooleanComparison, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: BooleanComparison
        hardCodedInputKey1: 10
        useHardCodedInputKey1: 1
        inputKey1: 
        operation: 2
        inputKey2: numStrength
        outputKey: pastStrengthThreshold
    - rid: 5602893111447519609
      type: {class: EndWorkflowIfConditionMet, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: EndWorkflowIfConditionMet
        inputKey1: pastStrengthThreshold
        conditionToEndOn: 1
    - rid: 8790164513324270165
      type: {class: EntityAbility, ns: , asm: Assembly-CSharp}
      data:
        abilityTrigger: 11
        effectSteps:
        - rid: 8790164513324270204
        - rid: 8790164513324270166
        - rid: 8790164513324270167
    - rid: 8790164513324270166
      type: {class: GetTargets, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: GetTargets
        useInputToLimitOptions: 0
        inputKey: 
        outputKey: self
        validTargets: 
        number: 1
        specialTargetRule: 3
        cantCancelTargetting: 0
    - rid: 8790164513324270167
      type: {class: ApplyStatus, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: ApplyStatus
        inputKey: self
        statusEffect: 6
        scale: 1
        getScaleFromKey: 0
        inputScaleKey: 
        multiplyByNumAuraStacks: 0
    - rid: 8790164513324270204
      type: {class: EndWorkflowIfNoMapElement, ns: , asm: Assembly-CSharp}
      data:
        effectStepName: EndWorkflowIfNoMapElement
        keyToCheck: damagedEnemy
